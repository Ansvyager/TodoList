{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andres\\\\Desktop\\\\react-redux-todo-app-master\\\\starter\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport TodoItem from './TodoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const todos = useSelector(state => state.todos);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list-group\",\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n      id: todo.id,\n      title: todo.title,\n      completed: todo.completed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TodoList, \"yf5/CXitEfCS89mS1QxI4IUHBGo=\", false, function () {\n  return [useSelector];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/Andres/Desktop/react-redux-todo-app-master/starter/src/components/TodoList.js"],"names":["React","useSelector","TodoItem","TodoList","todos","state","map","todo","id","title","completed"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACtB,QAAMC,KAAK,GAAGH,WAAW,CAAEI,KAAD,IAAUA,KAAK,CAACD,KAAjB,CAAzB;AAEA,sBACC;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,cACEA,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACV,QAAC,QAAD;AAAU,MAAA,EAAE,EAAEA,IAAI,CAACC,EAAnB;AAAuB,MAAA,KAAK,EAAED,IAAI,CAACE,KAAnC;AAA0C,MAAA,SAAS,EAAEF,IAAI,CAACG;AAA1D;AAAA;AAAA;AAAA;AAAA,YADA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAVD;;GAAMP,Q;UACSF,W;;;KADTE,Q;AAYN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport TodoItem from './TodoItem';\n\nconst TodoList = () => {\n\tconst todos = useSelector((state)=> state.todos)\n\t\n\treturn (\n\t\t<ul className='list-group'>\n\t\t\t{todos.map((todo) => (\n\t\t\t\t<TodoItem id={todo.id} title={todo.title} completed={todo.completed} />\n\t\t\t))}\n\t\t</ul>\n\t);\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}