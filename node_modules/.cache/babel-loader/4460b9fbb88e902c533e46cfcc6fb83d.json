{"ast":null,"code":"import _defineProperty from\"C:/Users/Andres/Desktop/react-redux-todo-app-master/starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"C:/Users/Andres/Desktop/react-redux-todo-app-master/starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Andres/Desktop/react-redux-todo-app-master/starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _extraReducers;import{createSlice,createAsyncThunk}from\"@reduxjs/toolkit\";export var getTodosAsync=createAsyncThunk(\"todos/getTodosAsync\",/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,todos;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://virtserver.swaggerhub.com/hanabyan/todo/1.0.0/to-do-list\");case 2:response=_context.sent;if(!response.ok){_context.next=8;break;}_context.next=6;return response.json();case 6:todos=_context.sent;return _context.abrupt(\"return\",{todos:todos});case 8:case\"end\":return _context.stop();}}},_callee);})));// export const addTodoAsync = createAsyncThunk(\n//   \"todos/addTodosAsync\",\n//   async (payload) => {\n//     const response = await fetch(\n//       \"https://virtserver.swaggerhub.com/hanabyan/todo/1.0.0/to-do-list\",\n//       {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"appliaction/json\",\n//         },\n//         body: JSON.stringify({\n//           title: payload.title,\n//           description: payload.description,\n//         }),\n//       }\n//     );\n//     if (response.ok) {\n//       const todo = await response.json();\n//       return { todo };\n//     }\n//   }\n// );\nexport var toggleCompleteAsync=createAsyncThunk('todos/complete');var todoSlice=createSlice({name:\"todos\",initialState:[],reducers:{addTodo:function addTodo(state,action){var newTodo={id:action.payload.id,title:action.payload.title,description:action.payload.description,status:true};state.push(newTodo);},toggleComplete:function toggleComplete(state,action){var index=state.findIndex(function(todo){return todo.id===action.payload.id;});state[index].status=action.payload.status;},deleteTodo:function deleteTodo(state,action){return state.filter(function(todo){return todo.id!==action.payload.id;});}},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,getTodosAsync.pending,function(state,action){console.log(\"fetching data...\");}),_defineProperty(_extraReducers,getTodosAsync.fulfilled,function(state,action){return action.payload.todos;}),_extraReducers)});var _todoSlice$actions=todoSlice.actions,addTodo=_todoSlice$actions.addTodo,toggleComplete=_todoSlice$actions.toggleComplete,deleteTodo=_todoSlice$actions.deleteTodo;export{addTodo,toggleComplete,deleteTodo};export default todoSlice.reducer;","map":{"version":3,"sources":["C:/Users/Andres/Desktop/react-redux-todo-app-master/starter/src/redux/todoSlice.js"],"names":["createSlice","createAsyncThunk","getTodosAsync","fetch","response","ok","json","todos","toggleCompleteAsync","todoSlice","name","initialState","reducers","addTodo","state","action","newTodo","id","payload","title","description","status","push","toggleComplete","index","findIndex","todo","deleteTodo","filter","extraReducers","pending","console","log","fulfilled","actions","reducer"],"mappings":"wiBAAA,OAASA,WAAT,CAAsBC,gBAAtB,KAA8C,kBAA9C,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAGD,gBAAgB,CAC3C,qBAD2C,sEAE3C,4KACyBE,CAAAA,KAAK,CAC1B,kEAD0B,CAD9B,QACQC,QADR,mBAIMA,QAAQ,CAACC,EAJf,+CAKwBD,CAAAA,QAAQ,CAACE,IAAT,EALxB,QAKUC,KALV,+CAMW,CAAEA,KAAK,CAALA,KAAF,CANX,wDAF2C,GAAtC,CAYP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAO,IAAMC,CAAAA,mBAAmB,CAAGP,gBAAgB,CAAC,gBAAD,CAA5C,CACP,GAAMQ,CAAAA,SAAS,CAAGT,WAAW,CAAC,CAC5BU,IAAI,CAAE,OADsB,CAE5BC,YAAY,CAAE,EAFc,CAG5BC,QAAQ,CAAE,CACRC,OAAO,CAAE,iBAACC,KAAD,CAAQC,MAAR,CAAmB,CAC1B,GAAMC,CAAAA,OAAO,CAAG,CACdC,EAAE,CAAEF,MAAM,CAACG,OAAP,CAAeD,EADL,CAEdE,KAAK,CAAEJ,MAAM,CAACG,OAAP,CAAeC,KAFR,CAGdC,WAAW,CAAEL,MAAM,CAACG,OAAP,CAAeE,WAHd,CAIdC,MAAM,CAAE,IAJM,CAAhB,CAMAP,KAAK,CAACQ,IAAN,CAAWN,OAAX,EACD,CATO,CAURO,cAAc,CAAE,wBAACT,KAAD,CAAQC,MAAR,CAAmB,CACjC,GAAMS,CAAAA,KAAK,CAAGV,KAAK,CAACW,SAAN,CAAgB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACT,EAAL,GAAYF,MAAM,CAACG,OAAP,CAAeD,EAArC,EAAhB,CAAd,CACAH,KAAK,CAACU,KAAD,CAAL,CAAaH,MAAb,CAAsBN,MAAM,CAACG,OAAP,CAAeG,MAArC,CACD,CAbO,CAcRM,UAAU,CAAE,oBAACb,KAAD,CAAQC,MAAR,CAAmB,CAC7B,MAAOD,CAAAA,KAAK,CAACc,MAAN,CAAa,SAACF,IAAD,QAAUA,CAAAA,IAAI,CAACT,EAAL,GAAYF,MAAM,CAACG,OAAP,CAAeD,EAArC,EAAb,CAAP,CACD,CAhBO,CAHkB,CAqB5BY,aAAa,mDACV3B,aAAa,CAAC4B,OADJ,CACc,SAAChB,KAAD,CAAQC,MAAR,CAAmB,CAC1CgB,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACD,CAHU,iCAIV9B,aAAa,CAAC+B,SAJJ,CAIgB,SAACnB,KAAD,CAAQC,MAAR,CAAmB,CAC5C,MAAOA,CAAAA,MAAM,CAACG,OAAP,CAAeX,KAAtB,CACD,CANU,iBArBe,CAAD,CAA7B,C,uBAkCuDE,SAAS,CAACyB,O,CAAlDrB,O,oBAAAA,O,CAASU,c,oBAAAA,c,CAAgBI,U,oBAAAA,U,2CACxC,cAAelB,CAAAA,SAAS,CAAC0B,OAAzB","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const getTodosAsync = createAsyncThunk(\r\n  \"todos/getTodosAsync\",\r\n  async () => {\r\n    const response = await fetch(\r\n      \"https://virtserver.swaggerhub.com/hanabyan/todo/1.0.0/to-do-list\"\r\n    );\r\n    if (response.ok) {\r\n      const todos = await response.json();\r\n      return { todos };\r\n    }\r\n  }\r\n);\r\n// export const addTodoAsync = createAsyncThunk(\r\n//   \"todos/addTodosAsync\",\r\n//   async (payload) => {\r\n//     const response = await fetch(\r\n//       \"https://virtserver.swaggerhub.com/hanabyan/todo/1.0.0/to-do-list\",\r\n//       {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"appliaction/json\",\r\n//         },\r\n//         body: JSON.stringify({\r\n//           title: payload.title,\r\n//           description: payload.description,\r\n//         }),\r\n//       }\r\n//     );\r\n//     if (response.ok) {\r\n//       const todo = await response.json();\r\n//       return { todo };\r\n//     }\r\n//   }\r\n// );\r\nexport const toggleCompleteAsync = createAsyncThunk('todos/complete')\r\nconst todoSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState: [],\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      const newTodo = {\r\n        id: action.payload.id,\r\n        title: action.payload.title,\r\n        description: action.payload.description,\r\n        status: true,\r\n      };\r\n      state.push(newTodo);\r\n    },\r\n    toggleComplete: (state, action) => {\r\n      const index = state.findIndex((todo) => todo.id === action.payload.id);\r\n      state[index].status = action.payload.status;\r\n    },\r\n    deleteTodo: (state, action) => {\r\n      return state.filter((todo) => todo.id !== action.payload.id);\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getTodosAsync.pending]: (state, action) => {\r\n      console.log(\"fetching data...\");\r\n    },\r\n    [getTodosAsync.fulfilled]: (state, action) => {\r\n      return action.payload.todos;\r\n    },\r\n    // [addTodoAsync.fulfilled]: (state, action) => {\r\n    //   state.push(action.payload.todo);\r\n    // },\r\n  },\r\n});\r\n\r\nexport const { addTodo, toggleComplete, deleteTodo } = todoSlice.actions;\r\nexport default todoSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}