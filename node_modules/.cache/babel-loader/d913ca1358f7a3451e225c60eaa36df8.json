{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andres\\\\Desktop\\\\react-redux-todo-app-master\\\\starter\\\\src\\\\components\\\\TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleComplete, deleteTodo } from \"../redux/todoSlice\";\nimport Modal from \"./ModalForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoItem = ({\n  id,\n  title,\n  completed,\n  description\n}) => {\n  _s();\n\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  let subtitle;\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = \"#f00\";\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  const dispatch = useDispatch();\n\n  const handleComplete = () => {\n    dispatch(toggleComplete({\n      id: id,\n      completed: !completed\n    }));\n  };\n\n  const handleDelete = () => {\n    dispatch(deleteTodo({\n      id: id\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: `list-group-item ${completed && \"list-group-item-success\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"d-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"mr-3\",\n            checked: completed,\n            onChange: handleComplete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"desc\",\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          className: \"btn btn-danger\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          children: \"look\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onAfterOpen: afterOpenModal,\n      onRequestClose: closeModal,\n      contentLabel: \"Example Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoItem, \"y+/04ZXoJ3WubHyH1NnQRB/IyVY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["C:/Users/Andres/Desktop/react-redux-todo-app-master/starter/src/components/TodoItem.js"],"names":["React","useState","useDispatch","toggleComplete","deleteTodo","Modal","TodoItem","id","title","completed","description","modalIsOpen","setIsOpen","subtitle","openModal","afterOpenModal","style","color","closeModal","dispatch","handleComplete","handleDelete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,KAAN;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAD,KAA2C;AAAA;;AAC1D,QAAM,CAACC,WAAD,EAAcC,SAAd,IAA2BZ,KAAK,CAACC,QAAN,CAAe,KAAf,CAAjC;AACA,MAAIY,QAAJ;;AACA,WAASC,SAAT,GAAqB;AACnBF,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,WAASG,cAAT,GAA0B;AACxB;AACAF,IAAAA,QAAQ,CAACG,KAAT,CAAeC,KAAf,GAAuB,MAAvB;AACD;;AAED,WAASC,UAAT,GAAsB;AACpBN,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AACD,QAAMO,QAAQ,GAAGjB,WAAW,EAA5B;;AAEA,QAAMkB,cAAc,GAAG,MAAM;AAC3BD,IAAAA,QAAQ,CAAChB,cAAc,CAAC;AAAEI,MAAAA,EAAE,EAAEA,EAAN;AAAUE,MAAAA,SAAS,EAAE,CAACA;AAAtB,KAAD,CAAf,CAAR;AACD,GAFD;;AAIA,QAAMY,YAAY,GAAG,MAAM;AACzBF,IAAAA,QAAQ,CAACf,UAAU,CAAC;AAAEG,MAAAA,EAAE,EAAEA;AAAN,KAAD,CAAX,CAAR;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE;AACE,MAAA,SAAS,EAAG,mBAAkBE,SAAS,IAAI,yBAA0B,EADvE;AAAA,6BAGE;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,2BAAhB;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,SAAS,EAAC,MAFZ;AAGE,YAAA,OAAO,EAAEA,SAHX;AAIE,YAAA,QAAQ,EAAEW;AAJZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,wBAAwBZ;AAAxB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,wBAAuBE;AAAvB;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE;AAAQ,UAAA,OAAO,EAAEW,YAAjB;AAA+B,UAAA,SAAS,EAAC,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAgBE;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE,QAAC,KAAD;AACE,MAAA,MAAM,EAAEV,WADV;AAEE,MAAA,WAAW,EAAEI,cAFf;AAGE,MAAA,cAAc,EAAEG,UAHlB;AAKE,MAAA,YAAY,EAAC;AALf;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA,kBADF;AAiCD,CAzDD;;GAAMZ,Q;UAeaJ,W;;;KAfbI,Q;AA2DN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleComplete, deleteTodo } from \"../redux/todoSlice\";\nimport Modal from \"./ModalForm\";\nconst TodoItem = ({ id, title, completed, description }) => {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  let subtitle;\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = \"#f00\";\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n  const dispatch = useDispatch();\n\n  const handleComplete = () => {\n    dispatch(toggleComplete({ id: id, completed: !completed }));\n  };\n\n  const handleDelete = () => {\n    dispatch(deleteTodo({ id: id }));\n  };\n  return (\n    <>\n      <li\n        className={`list-group-item ${completed && \"list-group-item-success\"}`}\n      >\n        <div className=\"d-flex justify-content-between\">\n          <span className=\"d-flex align-items-center\">\n            <input\n              type=\"checkbox\"\n              className=\"mr-3\"\n              checked={completed}\n              onChange={handleComplete}\n            />\n            <div className=\"text d-flex flex-column\">\n              <div className=\"title\">{title}</div>\n              <div className=\"desc\">{description}</div>\n            </div>\n          </span>\n          <button onClick={handleDelete} className=\"btn btn-danger\">\n            Delete\n          </button>\n          <button className=\"btn btn-danger\">look</button>\n        </div>\n      </li>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        \n        contentLabel=\"Example Modal\"\n      />\n    </>\n  );\n};\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}